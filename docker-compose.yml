version: "3"

volumes:
  mongodb_data_dev1: {}
  mongodb_data_dev2: {}
  mongodb_data_dev3: {}
  elasticsearch:

services:
  mongo1:
    container_name: mongo1
    hostname: mongo1
    image: mongo:latest
    volumes:
      - mongodb_data_dev1:/data/db
    restart: always
    ports:
      - "27017:27017"
    command: mongod --replSet rp0

  mongo2:
    container_name: mongo2
    hostname: mongo2
    image: mongo:latest
    volumes:
      - mongodb_data_dev2:/data/db
    restart: always
    ports:
      - "27018:27017"
    command: mongod --replSet rp0
    depends_on:
      - mongo1

  mongo3:
    container_name: mongo3
    hostname: mongo3
    image: mongo:latest
    volumes:
      - mongodb_data_dev3:/data/db
    restart: always
    ports:
      - "27019:27017"
    command: mongod --replSet rp0
    depends_on:
      - mongo2

  mongosetup:
    image: "setup-rspl"
    depends_on:
      - mongo1

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - "9018:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://host.docker.internal:27017/
    depends_on:
      - mongo1

  redis:
    image: redis
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/backend/
    expose:
      - 8000
    env_file:
      - ./settings/dev/.env.dev
    depends_on:
      - mongo1
      - redis

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.16.3
    restart: always
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: j2h2
      discovery.type: single-node


  logstash:
    container_name: logstash
    image: logstash:7.16.3
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,z
    ports:
      - "5001:5001/tcp"
      - "5001:5001/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    image: kibana:7.16.3
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,z
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  monstache:
    container_name: monstache
    restart: always
    image: rwynn/monstache:6.7.4
    command: -f ./monstache.config.toml &
    volumes:
      - ./elasticsearch/config/monstache.config.toml:/monstache.config.toml
    depends_on:
      - elasticsearch
      - mongo1
      - mongo2
      - mongo3
    links:
      - elasticsearch
    ports:
      - "8080:8080"


